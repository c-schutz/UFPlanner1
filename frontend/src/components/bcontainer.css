.bHolder {
    /* allows positioning within the div */
    position: relative;
    /* sets the distance between outline and border */
    outline-offset: 1vw;
    outline-style: solid;
    outline-width: .5vh;
    border-radius: .1vw;
    padding: 2vh;
    min-height: 20vh;
    max-height: 50vh;
    overflow: auto;
    width: 80%;
    margin: 5vh auto 10vh auto;
    max-width: 1200px;
    z-index: 0;
}

.page-container {
    padding-bottom: 10vh;
}

.bTitle {
    position: absolute;
    top: 0;
    left: 0;
    margin: 1vh;
    /* Add some margin */
    font-size: clamp(12px, 3vh, 50px);
    padding: 0.5vh 0vh;
    /* Add some padding */
}

.contentWrapper {
    display: flex;
    flex-wrap: wrap; /* stacks on small screens */
    justify-content: space-between;
    align-items: stretch;
    width: 100%;
    gap: 2vh;
    height: 100%;
}

.svgContainer {
    flex: 1;
    width: 50vw;
    height: 50vh;
    display: flex;
    justify-content: center;
    align-items: center;
}

.svgContainer svg {
    width: 100%;
    max-height: 40vh;
    object-fit: contain;
}

.buttonContainer {
    display: flex;
    align-items: flex-end;
    /* Align button at the bottom */
    margin-bottom: 1vh;
    /* Small margin from bottom */
}

.updateButton {
    background-color: lightcoral;
    color: white;
    padding: 10px 20px;
    font-size: 16px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    white-space: nowrap;
    /* Prevents button text from wrapping */
}

.updateButton:hover {
    opacity: 80%;
}

.z-index {
    z-index: 0;
}

/* Make SVG responsive */
.svgContainer svg {
    height: auto;
    max-height: 100%;
    z-index: 1;
}

.delete {
    position: absolute;
    top: 0;
    right: 0;
    margin: 1vh;
    /* Add some margin */
    font-size: larger;
    padding: 0.5vh 1vh;
    /* Add some padding */
    background-color: red;
    color: white;
    padding: 10px 20px;
    font-size: 16px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    white-space: nowrap;
    /* Prevents button text from wrapping */
    z-index: 2;
}

.delete:hover {
    opacity: 80%;
}

.calendarContainerl , .calendarContainer{
    max-width: 55%;
    overflow: visible;
    display: flex;
    flex-direction: column;
    position: relative;
    height: fit-content;
}


.fc-view-harness {
    min-height: 0 !important;
    max-height: 40vh !important;
    overflow: hidden;
}



.tooltip{
    position: relative;
    display: flex;
    top: 100%; /* puts it right below the calendar container */
    left: 50%; /* centers horizontally */
    transform: translateX(-50%); /* perfect center shift */
    margin-top: 5vh;
    z-index: 10;
    font-size: 2.5vh;
    padding: 1vh 2vh;
    border: 1px solid #ccc;
    border-radius: 1vh;
    box-shadow: 0px 2px 10px rgba(0,0,0,0.2);
    pointer-events: none;
    white-space: pre-wrap; 
}

.needs-event {
    background-color: rgb(247, 0, 0) !important; /* Apply red background to all events */
    font-size: x-large;
}

.wants-event {
    background-color: lightskyblue!important; /* Apply red background to all events */
    font-size: x-large;
}

.savings-event {
    background-color: rgb(0, 194, 32) !important; /* Apply red background to all events */
    font-size: x-large;
}

.extra-event {
    background-color: rgb(89, 0, 190) !important; /* Apply red background to all events */
    font-size: x-large;
}

.needs-event,
.wants-event,
.savings-event,
.extra-event {
    font-size: clamp(1px, 1.6vh, 40px); 
    height: 5vh;
    display: flex;
    align-items: center;
    justify-content: center;
}